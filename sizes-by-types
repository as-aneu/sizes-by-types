#!/bin/bash

#########################################
# Script to get the sizes by files type #
#                                       #
# @author Augustin Peyrard              #
# @date 2014/05/06                      #
#########################################

function usage {
    cat << EOF
usage: ${0##*/} [OPTIONS] path

OPTIONS:
    -t or --type [type]       -- specify the type of files [Not Yet Implemented]
    -v or --verbose           -- verbose output [Not Yet Implemented]
    -h or --human-readable    -- display size in human readable format [Not Yet Implemented]
    -k or --kilobytes         -- display size in kilobytes [Not Yet Implemented]
    -b or --bytes             -- display size in bytes [Not Yet Implemented]
    -s or --sort              -- sort the results by their sizes (ascendingly) [Not Yet Implemented]
    -r or --reverse-sort      -- reverse sort [Not Yet Implemented]
    --help                    -- print help [Not Yet Implemented]
    --version                 -- print version [Not Yet Implemented]
EOF
}

# check if the path is defined
if [[ -z $1 ]]; then
    usage
    exit 1
fi
path=$1
if [[ ! -d $path ]]; then
    echo "$0: $path is not a directory"
    exit 2
fi

# get all file types
types=`find $path -type f |grep -o "\.[a-zA-Z]*$"|sort|uniq`
for type in $types; do
    # for each file, calculate the aggregate the size and count the number of files
    size_and_nb=`find $path -name "*$type" -exec du -sk {} \; | awk '{nb++;total += $1} END {print nb":"total}'`
    size_and_nb_splitted=(${size_and_nb//:/ })

    # print results
    plural=""
    if [[ ${size_and_nb_splitted[0]} > 1 ]]; then
        plural="s"
    fi
    echo "${size_and_nb_splitted[1]}K for ${size_and_nb_splitted[0]} file$plural with extension $type"
done
